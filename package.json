{
  "name": "dyn-ui",
  "private": true,
  "version": "0.1.0",
  "scripts": {
    "build": "pnpm exec turbo run build",
    "dev": "turbo run dev --parallel",
    "storybook": "storybook dev -p 6006",
    "storybook:ci": "STORYBOOK_SMOKE=true storybook dev --ci --host 127.0.0.1 --port 6006",
    "build-storybook": "storybook build",
    "check": "node check-implementation.js",
    "check:implementation": "node check-implementation.js",
    "validate:types": "tsx scripts/validate-component-types.ts",
    "validate:components": "tsx scripts/validate-component-types.ts",
    "tokens:build": "cd packages/design-tokens && npm run build",
    "lint": "pnpm exec eslint .storybook tests scripts apps --ext .ts,.tsx --no-error-on-unmatched-pattern",
    "typecheck": "pnpm exec tsc --noEmit --project tsconfig.ci.json",
    "format:check": "pnpm exec prettier --check .storybook/main.ts .storybook/preview.tsx tests/e2e/accessibility.spec.ts tests/e2e/dyn-button.spec.ts tests/unit/dyn-ui-react.test.tsx playwright.config.ts playwright.a11y.config.ts playwright.visual.config.ts scripts/check-bundle-budgets.ts tsconfig.ci.json package.json turbo.json COMPONENT_STANDARDIZATION_REPORT.md .github/workflows/quality-gates.yml tsd.config.json vitest.config.ci.ts types/stubs/dyn-ui-react.d.ts",
    "test": "pnpm run gate:b",
    "test:unit": "bash -c 'mkdir -p reports/coverage && pnpm exec vitest run --config vitest.config.ci.ts --coverage --passWithNoTests'",
    "test:interaction": "pnpm exec start-server-and-test \"pnpm run storybook:ci\" http://127.0.0.1:6006 \"bash -c 'mkdir -p reports/storybook/coverage && JEST_JUNIT_OUTPUT=reports/storybook/junit.xml pnpm exec test-storybook --config-dir .storybook --ci --maxWorkers=2 --browsers chromium --includeTags autotest --junit --coverage --coverageDirectory reports/storybook/coverage'\"",
    "test:e2e": "pnpm exec playwright test --config=playwright.config.ts",
    "test:axe": "pnpm exec playwright test --config=playwright.a11y.config.ts",
    "test:visual": "pnpm exec playwright test --config=playwright.visual.config.ts",
    "test:api": "bash -c 'set -o pipefail && mkdir -p reports/api && pnpm exec tsd --project tsd.config.json --pretty | tee reports/api/tsd-report.txt'",
    "bundle:check": "pnpm exec tsx scripts/check-bundle-budgets.ts",
    "gate:a": "pnpm run lint && pnpm run typecheck && pnpm run format:check",
    "gate:b": "pnpm run test:unit && pnpm run test:interaction && pnpm run test:e2e",
    "gate:c": "pnpm run test:axe",
    "gate:d": "pnpm run test:visual",
    "gate:e": "pnpm run test:api",
    "gate:f": "pnpm run bundle:check",
    "gate:all": "pnpm run gate:a && pnpm run gate:b && pnpm run gate:c && pnpm run gate:d && pnpm run gate:e && pnpm run gate:f",
    "test:run": "vitest --run",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "test:dyngauge": "vitest DynGauge --run",
    "prepublishOnly": "pnpm run build && pnpm run prepare-dist-pkg",
    "changeset": "pnpm exec changeset",
    "release:version": "pnpm exec changeset version",
    "release:publish": "bash -c 'if [ -z \"$NPM_TOKEN\" ]; then echo \"Skipping package publish because NPM_TOKEN is not set\"; else pnpm exec changeset publish; fi'",
    "release": "pnpm run release:version && pnpm install --frozen-lockfile && pnpm run release:publish",
    "changelog:generate": "bash -c 'mkdir -p reports/changelog && pnpm exec changeset status --output reports/changelog/status.json || (echo \"{\\\"error\\\":\\\"changeset status failed\\\"}\" > reports/changelog/status.json)'",
    "metrics:collect": "pnpm exec tsx scripts/collect-metrics.ts"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.9.0",
    "@changesets/cli": "^2.29.7",
    "@chromatic-com/storybook": "4.1.1",
    "@mdx-js/react": "^3.1.1",
    "@playwright/test": "^1.56.1",
    "@rollup/plugin-commonjs": "^25.0.7",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-typescript": "^11.1.6",
    "@storybook/addon-a11y": "^9.1.13",
    "@storybook/addon-controls": "^9.0.8",
    "@storybook/addon-docs": "^9.1.13",
    "@storybook/addon-essentials": "^9.0.0-alpha.12",
    "@storybook/addon-interactions": "^9.0.0-alpha.10",
    "@storybook/addon-vitest": "^9.1.13",
    "@storybook/react": "^9.1.13",
    "@storybook/react-vite": "^9.1.13",
    "@storybook/test-runner": "^0.19.1",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/classnames": "^2.3.4",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.6.2",
    "@types/react": "^19.2.2",
    "@types/react-dom": "^19.2.2",
    "@types/storybook__react": "^5.2.1",
    "@typescript-eslint/parser": "^8.12.1",
    "@vitejs/plugin-react": "^4.7.0",
    "@vitest/browser": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "3.2.4",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.11.0",
    "eslint-plugin-dyn-ui": "workspace:*",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jest-dom": "^5.5.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^7.0.0",
    "eslint-plugin-storybook": "^9.1.13",
    "eslint-plugin-testing-library": "^7.13.3",
    "jsdom": "^27.0.0",
    "markdown-to-jsx": "^7.7.13",
    "playwright": "^1.55.1",
    "postcss": "^8.5.6",
    "postcss-nesting": "^13.0.2",
    "prettier": "^3.4.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "rollup": "^3.29.5",
    "rollup-plugin-peer-deps-external": "^2.2.4",
    "rollup-plugin-postcss": "^4.0.2",
    "rollup-plugin-visualizer": "^5.12.0",
    "sass": "^1.93.2",
    "sass-embedded": "^1.93.2",
    "start-server-and-test": "^2.0.3",
    "storybook": "^9.1.13",
    "terser": "^5.44.0",
    "tsd": "^0.31.1",
    "tsx": "^4.20.6",
    "turbo": "^1.13.4",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.2",
    "vite": "^4.5.14",
    "vitest": "^3.2.4",
    "vitest-axe": "^0.1.0"
  },
  "dependencies": {
    "classnames": "^2.5.1",
    "glob": "^11.0.3",
    "tslib": "^2.8.1"
  }
}
